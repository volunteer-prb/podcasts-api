version: "3"
services:
  frontend:
    image: localhost:5000/frontend:latest
    ports:
      - 127.0.0.1:1234:80
    networks:
      - public_access
    restart: always

  backend:
    image: localhost:5000/backend:latest
    environment:
      - DATABASE_URI=postgresql://postgres:testPassDontUseInProd@postgres/youtube_podcasts
    ports:
      - 127.0.0.1:1235:5000
    depends_on:
      - postgres
    networks:
      - public_access
      - database_only
    restart: always

  postgres:
    image: docker.io/postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=testPassDontUseInProd
    volumes:
      - ./postgres/data/:/var/lib/postgresql/data # persist postgres data to ./postgres/data/ on the host
    networks:
      - database_only
    restart: always

  ################
  # Celery Stack #
  ################

  telegram-bot-api:
    image: docker.io/aiogram/telegram-bot-api:latest
    environment:
      TELEGRAM_API_ID: <put_telegram_api_id>
      TELEGRAM_API_HASH: <put_telegram_api_hash>
    volumes:
      - ./telegram-bot-api-data:/var/lib/telegram-bot-api
    networks:
      - telegram_bot_api_only
    restart: always

  # Worker
  publisher:
    image: localhost:5000/volunteer-prb/podcasts-api-publisher:latest
    environment:
      TELEGRAM_SERVER: http://telegram-bot-api:8081
      TELEGRAM_TOKEN: <put_bot_token_here>
      BROKER_URL: redis://redis:6479
    depends_on:
      - telegram-bot-api
    networks:
      - telegram_bot_api_only
      - redis_only
    restart: always

  # Broker
  redis:
    image: docker.io/redis:7.0.0-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass testPassDontUseInProd
    volumes: 
      - cache:/data
    networks:
      - redis_only
    restart: always

  ################

networks:
  public_access: # Network for publically exposed services
  telegram_bot_api_only:
    internal: true
  redis_only:
    internal: true
  database_only:
    internal: true

